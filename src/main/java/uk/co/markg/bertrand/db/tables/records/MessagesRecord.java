/*
 * This file is generated by jOOQ.
 */
package uk.co.markg.bertrand.db.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import uk.co.markg.bertrand.db.tables.Messages;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessagesRecord extends UpdatableRecordImpl<MessagesRecord> implements Record3<Long, Long, String> {

    private static final long serialVersionUID = 2126274049;

    /**
     * Setter for <code>messages.messageid</code>.
     */
    public void setMessageid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>messages.messageid</code>.
     */
    public Long getMessageid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>messages.userid</code>.
     */
    public void setUserid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>messages.userid</code>.
     */
    public Long getUserid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>messages.content</code>.
     */
    public void setContent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>messages.content</code>.
     */
    public String getContent() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Messages.MESSAGES.MESSAGEID;
    }

    @Override
    public Field<Long> field2() {
        return Messages.MESSAGES.USERID;
    }

    @Override
    public Field<String> field3() {
        return Messages.MESSAGES.CONTENT;
    }

    @Override
    public Long component1() {
        return getMessageid();
    }

    @Override
    public Long component2() {
        return getUserid();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public Long value1() {
        return getMessageid();
    }

    @Override
    public Long value2() {
        return getUserid();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public MessagesRecord value1(Long value) {
        setMessageid(value);
        return this;
    }

    @Override
    public MessagesRecord value2(Long value) {
        setUserid(value);
        return this;
    }

    @Override
    public MessagesRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public MessagesRecord values(Long value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessagesRecord
     */
    public MessagesRecord() {
        super(Messages.MESSAGES);
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(Long messageid, Long userid, String content) {
        super(Messages.MESSAGES);

        set(0, messageid);
        set(1, userid);
        set(2, content);
    }
}
